# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  discord: antonioned/discord@0.1.0
jobs:
  build:
    environment:
      LEXICON_PATH: /opt/lexica/
      STRATEGY_PARAMS_PATH: /opt/data/strategy
      LETTER_DISTRIBUTION_PATH: /opt/data/letterdistributions
      AUTH_KEY: abcdef
    docker:
      - image: golang:alpine
    working_directory: /opt/macondo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "bf:37:1b:e1:b2:b0:ec:20:92:43:20:86:40:7c:c4:e0"
      - run:
          name: Install git, ssh, build-base, bash (for tests)
          command: apk update && apk upgrade && apk add git openssh build-base bash curl
      - run:
          name: Install ssl
          command: apk add --update ca-certificates openssl && update-ca-certificates
      - run: if [ ! -n "$(grep "^github.com " ~/.ssh/known_hosts)" ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run:
          name: Clone lexicon repo
          command: git clone git@github.com:domino14/word-game-lexica /opt/word-game-lexica
      - run: mkdir $LEXICON_PATH
      - run: mkdir $LEXICON_PATH/gaddag
      - run: mkdir $LEXICON_PATH/dawg
      - run: mv /opt/word-game-lexica/*.txt $LEXICON_PATH
      - run: cp -r /opt/macondo/data /opt/data
      - run: go build cmd/shell/main.go
      # build GADDAGs
      - restore_cache:
          keys:
            - gaddag-cache
      - run: cd testcommon && go generate 
      - run: cd /opt/macondo && go test $(go list ./... | grep -v wasm)
      - save_cache:
          key: gaddag-cache
          paths:
            - /opt/lexica/gaddag
            - /opt/lexica/dawg
      - discord/status: &discord-webhook-setting
          webhook: "${DISCORD_WEBHOOK}"
          success_message: ":tada: A $CIRCLE_JOB job has succeeded! (Branch: $CIRCLE_BRANCH)"
          failure_message: ":red_circle: A $CIRCLE_JOB job has failed! (Branch: $CIRCLE_BRANCH)"

  deploy_bot_docker:
    machine: true
    steps:
      - checkout
      - run: echo $GHCR_TOKEN | docker login ghcr.io -u domino14 --password-stdin
      - run: docker build -f Dockerfile-bot-prod -t ghcr.io/domino14/macondo-bot:${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM} .
      - run: docker push ghcr.io/domino14/macondo-bot:${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}
      - discord/status: *discord-webhook-setting

workflows:
  version: 2
  build_app:
    jobs:
      - build
      - deploy_bot_docker:
          context:
            - woogles-deploy
          requires:
            - build
          filters:
            branches:
              only:
                - master
